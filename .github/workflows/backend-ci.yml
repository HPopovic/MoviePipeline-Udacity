name: backend-ci-workflow

on:
  # Run on demand
  workflow_dispatch:
  # Run when pull request to main branch
  pull_request:
    branches: 
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a python environment.
      - uses: actions/setup-python@v5
      - name: Set up Python
        with:
          python-version: '3.10'
          cache: 'pipenv'
          cache-dependency-path: '**/backend/Pipfile.lock'
      - name: Install dependencies
        run: python -m pip install --upgrade pip
 
      # Cache action to restore cache.

      # Install the dependencies using pipenv
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: cd starter/backend && pipenv install

      # Run the linter.
      - run: cd starter/backend && pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a python environment.
      - uses: actions/setup-python@v5
      - name: Set up Python
        with:
          python-version: '3.10'
          cache: 'pipenv'
          cache-dependency-path: '**/backend/Pipfile.lock'
      - name: Install dependencies
        run: python -m pip install --upgrade pip
      # Cache action to restore cache.

      # Install the dependencies using pipenv
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: cd starter/backend && pipenv install


      # Run the test.
      - run: cd starter/backend && pipenv run test
      
  build:
    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a python environment.
      - uses: actions/setup-python@v5
      - name: Set up Python
        with:
          python-version: '3.10'
          cache: 'pipenv'
          cache-dependency-path: '**/backend/Pipfile.lock'
      - name: Install dependencies
        run: python -m pip install --upgrade pip
      # Cache action to restore cache.

      # Install the dependencies using pipenv
      - name: Install pipenv
        run: curl https://raw.githubusercontent.com/pypa/pipenv/master/get-pipenv.py | python
      - run: cd starter/backend && pipenv install

      # Build the application.
      # - run:

      # Send a console message at completion.
      - run: |
          echo "Back end build complete"
