name: frontend-ci-workflow

env:
  REACT_APP_MOVIE_API_URL: 'http://aa6968e7a076f4796a1696f4b1199363-728826689.us-east-1.elb.amazonaws.com'

on:
  # Run on demand
  workflow_dispatch:
  # Run when pull request to main branch
  pull_request:
    branches: 
      - main

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment.
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      
      # Cache action to restore cache.
      - uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install the dependencies.
      - run: cd starter/frontend && npm ci

      # Run the linter.
      - run: cd starter/frontend && npm run lint

  test:
    runs-on: ubuntu-latest
    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment.
      - uses: actions/setup-node@v4
        with:
          node-version: latest
      
      # Cache action to restore cache.
      - uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install the dependencies.
      - run: cd starter/frontend && npm ci

      # Run the test.
      - run: cd starter/frontend && npm run test
      
  build:
    needs: [lint, test]

    runs-on: ubuntu-latest

    steps:
      # Check out the code from the repository.
      - uses: actions/checkout@v3

      # Set up a Node.js environment.
      - uses: actions/setup-node@v4
        with:
          node-version: latest

      # Cache action to restore cache.
      - uses: actions/cache@v3
        with:
          path: starter/frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('starter/frontend/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Install the dependencies.
      - run: cd starter/frontend && npm ci

      # Build the application.
      - name: Build docker image
        run: cd starter/frontend && docker build --build-arg=${{env.REACT_APP_MOVIE_API_URL}} --tag=mp-frontend:latest .
          
      - name: Run docker image    
        run: cd starter/frontend && docker run --name mp-frontend -p 3000:3000 -d mp-frontend

      - name: Run tests
        run: cd starter/frontend && npm run test